/*
 * Copyright 2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import java.text.SimpleDateFormat


buildscript {
    repositories {
        maven {
            url mavenCentral
            credentials {
	            username mavenUsername
	            password mavenPassword
	        }
        }
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.7.0'
        classpath 'org.ajoberstar:gradle-git:0.6.3'
    }
}
plugins {
	id "org.sonarqube" version "2.2.1"
}
apply plugin: 'java'
apply plugin: 'license'
apply plugin: 'application'
apply plugin: 'maven'

mainClassName = 'bubble.Main'
sonarqube {
    properties {
        property “sonar.projectKey”, “sonarqube:bubble”
        property “sonar.projectName”, “My Simple Gradle Project”
        property “sonar.sourceEncoding”, “UTF-8"
        property “sonar.projectVersion”, "1.0.0"
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/java']
        }
        resources {
            srcDirs = ['src/resources']
        }
    }
}

Date buildTimeAndDate = new Date()
ext {
    buildTime = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildDate = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

configurations {
    compileOnly
    testCompileOnly
}

repositories {
	maven {
        url mavenCentral
        credentials {
            username mavenUsername
            password mavenPassword
        }
    }
}

license {
    header = rootProject.file('licence')
    strictCheck = true
    ignoreFailures = false
    mapping {
        java = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
    }
}

run {
    main = project.getProperty('mainClassName')
}

jar {
    manifest {
        attributes 'Implementation-Title': project.getProperty('name'),
                   'Implementation-Version': project.getProperty('version'),
                   'Main-Class': project.getProperty('mainClassName'),
                   'Built-By': System.properties['user.name'],
                   'Created-By': System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.getProperty("java.vm.version") + ")",
                   'Build-Date': buildTime,
                   'Build-Time': buildDate
    }
}
